<!DOCTYPE html>
<!--suppress HtmlUnknownTag, HtmlUnknownTag, HtmlUnknownTarget, JSUnresolvedLibraryURL -->
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Testing with FontAwesome enabled</title>
        <link rel="stylesheet" media="all" href="../css/linkpurpose.css">
        <script src="https://kit.fontawesome.com/c8feb6767b.js" crossorigin="anonymous"></script>
    </head>
<body>
    <header>
        <h1>Link Purpose tests</h1>
    </header>
    <main>
        <section id="external">
            <ul>
                <li>
                    <a href="https://www.princeton.edu">External link</a>
                </li>
                <li style="width: 20em;">
                    An <a href="https://www.princeton.edu">External link</a> inline in a sentence that breaks over several lines, followed by more words on a line that should have the same line height.
                </li>
            </ul>

        </section>
        <section id="new-window">
            <ul>
                <li>
                    <a href="/" target="_blank">New window link</a>
                </li>
            </ul>
        </section>
        <section id="document">
            <ul>
                <li>
                    <a href="/example.pdf">PDF link</a>
                </li>
                <li>
                    <a href="/example.pdf" target="_blank">PDF new window link</a>
                </li>
            </ul>
        </section>
        <section id="spreadsheet">
            <ul>
                <li>
                    <a href="/example.xls">Spreadsheet (custom test)</a>
                </li>
                <li>
                    <a href="/example.xls" target="_blank">Spreadsheet new window link</a>
                </li>
            </ul>
        </section>
        <section id="new window">

        </section>
        <section id="chaining">

        </section>



        <script src="../js/linkpurpose.js"></script>
        <!-- Instantiate-->
        <!--suppress JSUnusedGlobalSymbols -->
        <script>
          if (CSS.supports('selector(:is(body))')) {
            const linkPurpose = new LinkPurpose({

              purposes: {
                spreadsheet: {
                  priority: 50, // Higher numbers "win," e.g., mark external spreadsheets as spreadsheet
                  selector: '[href$=".xls"], [href$=".xlsx"], [href*=".xls?"], [href*=".xlsx?"], [href^="https://docs.google.com/spreadsheets/"]',
                  message: '(Link downloads spreadsheet)', // Hidden text for screen readers
                  linkClass: 'link-purpose-spreadsheet', // Goes on link
                  iconPosition: 'beforeend',
                  iconWrapperClass: 'link-purpose-spreadsheet-icon', // Goes on span around icon
                  iconType: 'classes', // Apply classes to a span to create link
                  iconClasses: ['fa-regular', 'fa-file-excel'], // Apply these classes
                },
                externalLink: {
                  iconType: 'classes', // html, src or classes
                  iconClasses: ['fa-solid', 'fa-up-right-from-square'], // set iconType to classes to use
                },

                document: {
                  iconType: 'classes',
                  iconClasses: ['fa-regular', 'fa-file-lines'], // set iconType to classes to use
                },

                mailTo: {
                  iconType: 'classes',
                  iconClasses: ['fa-regular', 'fa-envelope'],
                },

                newWindow: {
                  iconType: 'classes',
                  iconClasses: ['fa-regular', 'fa-window-restore'],
                },
              }


            });
          }

          /*let inject = document.querySelector('#all-tests');
          for (const [key, value] of Object.entries(Ed11y.M)) {
            if (value.title && typeof value.tip()) {
              let item = document.createElement('div');
              item.innerHTML = value.tip('example');
              let title = document.createElement('h3');
              title.prepend(value.title);
              item.prepend(title);
              inject.append(item);
            };
          }*/
        </script>

        <style>
            a:hover {
                color: wheat;
                background-color: brown;
            }
        </style>
    </main>
</body>
